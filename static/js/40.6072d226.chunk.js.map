{"version":3,"file":"static/js/40.6072d226.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/app.module.css?b380","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"conteiner\":\"app_conteiner__xkRdl\",\"title\":\"app_title__4y3sC\",\"items\":\"app_items__ZUESe\",\"item\":\"app_item__cmWzA\",\"buttonDel\":\"app_buttonDel__pl3ku\",\"input\":\"app_input__2Ikso\",\"form\":\"app_form__+5Nq3\",\"buttonSub\":\"app_buttonSub__Y7dD1\"};","// export const getContacts = state => state.contacts;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","import { useState, useEffect } from 'react';\n// import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts, addContact } from '../../redux/contacts/operations';\nimport s from '../app.module.css';\nimport { selectContacts } from '../../redux/contacts/selectors';\n// import { } from '../../redux/operations';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const lowerCaseName = name.toLowerCase();\n\n    if (items.some(e => e.name.toLowerCase() === lowerCaseName)) {\n      return alert(`${name.toUpperCase()} is already in contacts`);\n    } else {\n      onSubmitForm(name, number);\n    }\n    reset();\n  };\n  console.log();\n  const onSubmitForm = (name, number) => {\n    const contact = {\n      // id: nanoid(),\n      name,\n      number,\n    };\n\n    dispatch(addContact(contact));\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            onChange={event => handleChange(event)}\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Name\"\n          />\n        </label>\n        <label>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={event => handleChange(event)}\n            value={number}\n            required\n            placeholder=\"Number\"\n          />\n        </label>\n        <button className={s.buttonSub} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n      <div>\n        <ul></ul>\n      </div>\n    </>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/filterSlice';\nimport s from '../app.module.css';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterName = useSelector(selectFilter);\n\n  const handleFilterChange = event => {\n    dispatch(filterContacts(event.target.value));\n  };\n  return (\n    <>\n      <label>\n        <span>Find contacts by name </span>\n\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"filter\"\n          value={filterName}\n          onChange={e => handleFilterChange(e)}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Search...\"\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from '../app.module.css';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n} from '../../redux/contacts/selectors';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\n\nconst ContactList = () => {\n  const items = useSelector(selectContacts);\n  const filterName = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filterContacts = () => {\n    if (filterName) {\n      const filterLow = filterName.toLowerCase().trim();\n      return items.filter(({ name }) => name.toLowerCase().includes(filterLow));\n    } else {\n      return items;\n    }\n  };\n\n  const filteredContacts = filterContacts();\n  return (\n    <>\n      <div>{error && <b>{error}</b>}</div>\n\n      <ul className={s.items}>\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <li className={s.item} key={id}>\n              <div>{name}:</div>\n              <div> {number}</div>\n\n              <button\n                className={s.buttonDel}\n                onClick={() => dispatch(deleteContact(id))}\n                type=\"button\"\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\nimport s from '../components/app.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from '../redux/contacts/selectors';\nimport ReactLoading from 'react-loading';\n\nconst Contact = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={s.conteiner}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n\n      <h2 className={s.title}>Contacts</h2>\n\n      <Filter />\n      {isLoading && !error && <ReactLoading type=\"bubbles\" color=\"#fff\" />}\n\n      <ContactList />\n    </div>\n  );\n};\nexport default Contact;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","useEffect","fetchContacts","handleChange","event","currentTarget","value","console","log","onSubmitForm","contact","addContact","reset","className","s","onSubmit","preventDefault","lowerCaseName","toLowerCase","some","e","alert","toUpperCase","type","onChange","pattern","title","required","placeholder","filterName","filterContacts","target","filteredContacts","filterLow","trim","includes","map","id","onClick","deleteContact","color"],"sourceRoot":""}